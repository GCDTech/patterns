/*------------------------------------
	# TRANSITION

	The shorthand mixin supports multiple transition.

		@include transition (all 2.0s ease-in-out);
		@include transition (opacity 1.0s ease-in 0s, width 2.0s ease-in 2s);

	To transition specific vendor-prefixed properties (`-webkit-transform, -moz-transform, ...`), do not use the shorthand mixin. Use the individual transition mixins.

		@include transition-property (transform);
		@include transition-duration(1.0s);
		@include transition-timing-function(ease-in);
		@include transition-delay(0.5s);
*/

@mixin transition (
$properties...
) {
	@if length($properties) >= 1 {
		@include prefixer(transition, $properties, webkit moz spec);
	}

	@else {
		$properties: all 0.15s ease-out 0s;
		@include prefixer(transition, $properties, webkit moz spec);
	}
}

@mixin transition-property (
$properties...
) {
	-webkit-transition-property: transition-property-names($properties, 'webkit');
	-moz-transition-property: transition-property-names($properties, 'moz');
	transition-property: transition-property-names($properties, false);
}

@mixin transition-duration (
$times...
) {
	@include prefixer(transition-duration, $times, webkit moz spec);
}

@mixin transition-timing-function (
$motions...
) {
// ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()
	@include prefixer(transition-timing-function, $motions, webkit moz spec);
}

@mixin transition-delay (
$times...
) {
	@include prefixer(transition-delay, $times, webkit moz spec);
}